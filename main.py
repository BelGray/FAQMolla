import datetime
import disnake
from disnake.ext import commands
import asyncio
from disnake.ui import Button
from disnake.enums import ButtonStyle, TextInputStyle
from disnake import Embed
from disnake.utils import get
from disnake.ui import Select
import configs


log_in = str(input("token /> "))
conf = configs.Configs(log_in)
bot = commands.Bot(command_prefix="faq>", case_insensitive=True, intents=disnake.Intents.all())

@bot.event
async def on_ready():
    print(f"""BOT CONNECTED SUCCESSFUL!
{datetime.datetime.now()}""")

@bot.command()
async def set(ctx):
  if conf.is_admin(ctx.author.id):
    """FIRST STAGE"""
    white = bot.get_emoji(1086292088863342653)
    welcome = bot.get_channel(conf.get_welcome_channel())
    embed=Embed(
        title=f"{white} Welcome to BelGray's! This is the support server for all our products!",
        description="Choose your language, please :)",
        color=conf.default_color
    )
    components = disnake.ui.View()
    components.add_item(Button(style=disnake.ButtonStyle.secondary, label="English", custom_id="set_eng", emoji="üá¨üáß"))
    components.add_item(Button(style=disnake.ButtonStyle.secondary, label="Russian", custom_id="set_ru", emoji="üá∑üá∫"))
    await welcome.send(embed=embed, view=components)

    """SECOND STAGE"""
    rule = bot.get_channel(conf.get_rules_channel())
    protect = bot.get_emoji(1084301542120759366)
    embed=Embed(
        title=f"{protect} OUR RULES (follow them!)",
        color=conf.default_color
    )
    embed.set_image("https://media.discordapp.net/attachments/1078429568572080243/1097217735433404466/BelGrays_banner.jpg?width=1056&height=378")
    embed.add_field(name="1) No spamming", value="`mute/ban`")
    embed.add_field(name="2) No advertisements", value="`ban`")
    embed.add_field(name="3) No flooding", value="`mute/ban`")
    embed.add_field(name="4) Follow the Discord Community Guidelines", value="`ban`")
    embed.add_field(name="5) No pornographic/adult/NSFW or NSFL material", value="`ban`")
    embed.add_field(name="6) Don‚Äôt share illegal or pirated content", value="`ban`")
    embed.add_field(name="7) No sharing or distributing viruses or malicious software", value="`ban`")
    embed.add_field(name="8) No bullying members", value="`mute/ban`")
    embed.add_field(name="9) Don't insult the values, race, religion of members", value="`mute/ban`")
    embed.add_field(name="10) Don't send links to sites that don't use SSL certificate", value="`(nothing, but the bot will delete your message)`")
    components = disnake.ui.View()
    components.add_item(Button(style=ButtonStyle.blurple, label="Translate into Russian", custom_id="translate_rule_ru", emoji="üá∑üá∫"))
    await rule.send(embed=embed, view=components)
  else:
    return await ctx.send(":x: You don't have enough permissions!")


@bot.event
async def on_button_click(interaction):
    if interaction.component.custom_id == "set_eng":
        eng =  interaction.guild.get_role(conf.get_eng_community_role())
        ru = interaction.guild.get_role(conf.get_ru_community_role())
        try:
            await interaction.author.add_roles(eng)
            await interaction.author.remove_roles(ru)
            await interaction.send("Nice! Now enjoy our server and meet your country's community ;)", ephemeral=True)
        except:
            await interaction.send(":x: Something went wrong! Try again later :(", ephemeral=True)
    if interaction.component.custom_id == "set_ru":
        eng =  interaction.guild.get_role(conf.get_eng_community_role())
        ru = interaction.guild.get_role(conf.get_ru_community_role())
        try:
            await interaction.author.add_roles(ru)
            await interaction.author.remove_roles(eng)
            await interaction.send("–û—Ç–ª–∏—á–Ω–æ! –ù–∞—Å–ª–∞–∂–¥–∞–π—Å—è –Ω–∞—à–∏–º —Å–µ—Ä–≤–µ—Ä–æ–º –∏ –ø–æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å —Ç–µ–ø–ª—ã–º —Ä—É—Å—Å–∫–∏–º –∫–æ–º—å—é–Ω–∏—Ç–∏ ;)", ephemeral=True)
        except:
            await interaction.send(":x: Something went wrong! Try again later :(", ephemeral=True)

    if interaction.component.custom_id == "translate_rule_ru":
        protect = bot.get_emoji(1084301542120759366)
        embed = Embed(
            title=f"{protect} –ù–ê–®–ò –ü–†–ê–í–ò–õ–ê (–°–æ–±–ª—é–¥–∞–π –∏—Ö!)",
            color=conf.default_color
        )
        embed.add_field(name="1) –ù–µ —Å–ø–∞–º–∏—Ç—å", value="`–º—É—Ç/–±–∞–Ω`")
        embed.add_field(name="2) –†–µ–∫–ª–∞–º–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞", value="`–±–∞–Ω`")
        embed.add_field(name="3) –ù–µ —Ñ–ª—É–¥–∏—Ç—å", value="`–º—É—Ç/–±–∞–Ω`")
        embed.add_field(name="4) –°–æ–±–ª—é–¥–∞–π Discord Community Guidelines", value="`–±–∞–Ω`")
        embed.add_field(name="5) –ó–∞–ø—Ä–µ—â–µ–Ω–∞ –ø–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏—è/NSFW –∏–ª–∏ NSFL –∫–æ–Ω—Ç–µ–Ω—Ç", value="`–±–∞–Ω`")
        embed.add_field(name="6) –ó–∞–ø—Ä–µ—â–µ–Ω–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å –Ω–µ–ª–µ–≥–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏–ª–∏ –ü–û", value="`–±–∞–Ω`")
        embed.add_field(name="7) –ó–∞–ø—Ä–µ—â–µ–Ω–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω–æ–µ –ü–û", value="`–±–∞–Ω`")
        embed.add_field(name="8) –ó–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Å–∫–æ—Ä–±–ª—è—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", value="`–º—É—Ç/–±–∞–Ω`")
        embed.add_field(name="9) –ó–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Å–∫–æ—Ä–±–ª—è—Ç—å —Ü–µ–Ω–Ω–æ—Å—Ç–∏, —Ä–∞—Å—É, —Ä–µ–ª–∏–≥–∏—é —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", value="`–º—É—Ç/–±–∞–Ω`")
        embed.add_field(name="10) –ó–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–∞–π—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∏–º–µ—é—Ç SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç",
                        value="`(–Ω–∏—á–µ–≥–æ, –Ω–æ –±–æ—Ç –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ)`")
        await interaction.send(embed=embed, ephemeral=True)


@bot.event
async def on_message(message):
    if "http://" in message.content and "." in message.content:
        print(message.content)
        await message.delete()



try:
    bot.run(conf.token)
except Exception:
    raise Exception("Invalid bot OAuth2 token")